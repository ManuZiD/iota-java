package account.deposits;

import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Date;

import org.iota.jota.account.deposits.DepositConditions;
import org.iota.jota.account.deposits.DepositRequest;
import org.iota.jota.account.deposits.methods.QRMethod;
import org.iota.jota.types.Hash;
import org.junit.Before;
import org.junit.Test;

import net.glxn.qrgen.javase.QRCode;

public class QrTest extends DepositTest {
    
    private static final byte[] qrBytes = new byte[] { -119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 
            0, 0, 125, 0, 0, 0, 125, 1, 0, 0, 0, 0, -89, -5, 81, -120, 0, 0, 2, 97, 73, 68, 65, 84, 120, -38, -51, -43, 
            49, -70, -84, 42, 12, 0, 96, 104, 112, 11, -48, -64, -42, -76, -127, 45, 104, 35, -48, -64, 22, -96, 33, 91, 
            -61, 70, -73, 32, -115, 92, -34, -52, -71, -59, -101, -55, -23, -81, -27, -1, 41, 73, 32, 68, -46, -1, -1, 
            -36, -28, -97, 1, 71, 99, 62, -126, 92, 25, -33, 110, -94, 48, -128, 22, -28, 118, 4, 77, -28, -68, 117, 
            -64, 32, -119, -76, 78, -57, 5, -9, -54, 54, -1, 11, -60, 96, -45, 20, -106, -106, -13, 111, 112, -108, -99, 
            16, 98, -18, -83, -31, 0, -51, 23, 61, 65, -78, 62, -73, -114, -126, -93, -7, -17, -109, 126, 106, -7, -128, 
            -34, -113, 86, 40, -60, 92, 44, -4, -20, -57, 7, 68, 63, -46, -98, 28, -105, 124, -34, 103, -123, -63, -87, 
            90, 21, 69, -76, -78, -7, 32, 81, -128, 42, 70, 113, 54, 119, -57, 53, 5, 12, -54, -66, -37, -18, 123, -68, 
            110, -74, -60, -114, -127, 79, -101, 35, 38, -58, 64, 76, 125, 45, -6, 5, 13, 78, -87, -59, 113, 92, -51, 
            -55, 5, 48, -16, 25, -6, -67, 65, 88, -58, -14, 56, -28, 103, 54, 117, -71, 78, 105, 98, 97, 10, -125, -106, 
            -56, 108, -126, -88, -116, -101, 58, 117, 12, -110, 109, -71, -123, -103, 51, 113, -60, -9, -55, 125, -62, 
            -43, -6, -31, -52, 35, 90, 75, -26, -64, 97, -12, 20, 19, -113, -100, -11, -44, -125, -62, 32, -47, 115, 
            113, 90, -102, 36, -105, -16, 14, -5, 9, 85, -7, -57, -60, 86, -89, -26, -61, 43, -11, 47, -72, 9, -93, 
            -127, -115, -90, 123, -52, 127, -121, -118, 64, -79, 49, -9, 118, 18, 62, 61, 42, -94, -32, 8, -79, -93, 29, 
            -92, -28, -101, -109, 22, -125, 11, -54, 76, 1, -46, -72, 64, -16, 83, -53, 7, 36, -111, 79, -67, -118, 124, 
            -71, 85, 68, 64, 65, 5, 115, -35, -54, 109, -89, 0, 28, 28, -111, -101, 63, -119, 72, -36, -4, -51, -29, 3, 
            78, -21, -109, 117, -94, -54, 109, -84, 10, 24, -60, -93, -88, -4, -40, 96, 99, 124, 95, -96, 47, -128, 34, 
            2, 97, 83, 28, 23, -2, -35, 14, 95, 80, -119, 112, 38, -6, 91, -54, 121, -87, 22, 3, -72, -114, -42, -118, 
            74, -102, -45, -25, 21, -10, 11, -114, 124, 47, 80, -11, 42, -55, 116, 43, 20, -6, 53, -94, 61, 92, -100, 
            59, -31, 90, 97, -48, -14, 77, -85, -34, 90, 32, -85, 122, -123, -3, -126, 100, 11, -77, -71, 85, -55, -87, 
            -93, -128, 65, -96, -83, 50, 45, -96, -20, -42, 45, 40, 20, 73, 51, 92, 87, 76, 83, -113, -89, -62, -96, 
            110, -93, -3, -57, 119, 35, 44, 55, 29, -125, 88, 8, -95, 69, 110, 48, 78, -116, -94, 48, 94, 101, -102, 
            -37, 118, -75, -54, 13, 96, 112, 60, 6, -38, 61, -45, 115, 103, -30, 66, -31, 89, 77, 118, -42, -47, -64, 
            87, -62, 44, 6, -67, 39, 105, 60, -72, 105, -20, 53, 0, 6, -114, -114, -119, 17, 68, 28, -125, 69, 56, -123, 
            -63, -72, -91, -117, -77, -32, -3, 24, -97, 1, -123, 36, -54, -82, 39, -89, 10, 89, 28, -5, 5, -58, 32, 24, 
            -55, -21, -83, -86, -37, -30, -48, 50, -116, -50, 115, -116, 47, -81, 33, -3, 5, -48, 70, -38, 57, -106, 89, 
            -13, -11, -35, -89, -97, 48, 10, -89, -50, -108, -91, -16, -99, 105, -117, -63, 63, -5, -117, -2, -128, 63, 
            121, 53, -40, -90, 45, -121, 74, 71, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};

    
    QRMethod qrMethod = null;
    DepositConditions conditions = null;
    
    @Before
    public void setUp() throws Exception {
        qrMethod = new QRMethod();
        
        DepositRequest request = new DepositRequest(new Date(0), false, 5);
        conditions = new DepositConditions(request, new Hash(depositAddress));
    }

    @Test
    public void qrFromString() {
        DepositConditions deposit = qrMethod.parse(QRCode.from(conditions.toString()));
        assertEquals(conditions, deposit);
    }

    @Test
    public void qrFromDeposit() throws IOException {
        QRCode code = qrMethod.build(conditions);
        ByteArrayOutputStream stream = code.stream();
        
        assertArrayEquals(qrBytes, code.stream().toByteArray());
        
        stream.close();
    }
}
